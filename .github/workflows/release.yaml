---
name: Release Go
on:
  workflow_call:
    inputs:
      homebrew:
        required: false
        type: boolean
        default: false
      aqua_policy_config:
        required: false
        type: string
    secrets:
      gh_app_id:
        required: false
      gh_app_private_key:
        required: false

permissions: {}

env:
  AQUA_POLICY_CONFIG: ${{ inputs.aqua_policy_config }}
  AQUA_LOG_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    permissions:
      contents: write # required to create a release
      id-token: write # required for cosign
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version: "1.19.5"
          cache: true

      - uses: aquaproj/aqua-installer@61e2563dfe7674cbf74fe6ec212e444198a3bb00 # v2.0.2
        with:
          aqua_version: v1.32.2

      - name: Generate token
        id: generate_token
        if: inputs.homebrew
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92 # v1.8.0
        with:
          app_id: ${{ secrets.gh_app_id }}
          private_key: ${{ secrets.gh_app_private_key }}

      - name: remove changes
        # Sometimes it is failed to release by goreleaser due to changes of go.sum
        run: git checkout -- .
      - name: fetch tags to release
        run: git fetch --tags -f
      - name: Unshallow
        run: git fetch --prune --unshallow
      - run: cosign version

      - name: Run GoReleaser
        run: goreleaser release --rm-dist
        if: inputs.homebrew
        env:
          GITHUB_TOKEN: ${{ github.token }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: Run GoReleaser
        run: goreleaser release --rm-dist
        if: "! inputs.homebrew"
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Generate hashes
        id: hash
        run: |
          # sha256sum generates sha256 hash for all artifacts.
          # base64 -w0 encodes to base64 and outputs on a single line.
          # sha256sum artifact1 artifact2 ... | base64 -w0
          echo "hashes=$(find dist -name "*.tar.gz" -print0 | xargs -0 sha256sum | base64 -w0)" >> "$GITHUB_OUTPUT"

  provenance:
    needs: [build]
    permissions:
      actions: read # Needed for detection of GitHub Actions environment.
      id-token: write # Needed for provenance signing and ID
      contents: write # Needed for release uploads
    # slsa-framework/slsa-github-generator doesn't support pinning version
    # > Invalid ref: 68bad40844440577b33778c9f29077a3388838e9. Expected ref of the form refs/tags/vX.Y.Z
    # https://github.com/slsa-framework/slsa-github-generator/issues/722
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.4.0
    with:
      base64-subjects: "${{ needs.build.outputs.hashes }}"
      # Upload provenance to a new release
      upload-assets: true
